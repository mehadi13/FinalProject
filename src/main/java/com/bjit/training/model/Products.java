package com.bjit.training.model;
// Generated Feb 11, 2018 11:30:26 PM by Hibernate Tools 4.3.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Products generated by hbm2java
 */
@Entity
@Table(name = "products", catalog = "dbtest")
public class Products implements java.io.Serializable {

	private Integer id;
	private Categories categories;
	private String description;
	private int quantity;
	private String productName;
	private int originalPrice;
	private int discountPrice;
	private boolean availability;
	private Date updatedAt;
	private Date createdAt;
	/*private Set<ProductImages> productImageses = new HashSet<ProductImages>(0);
	private Set<ProductAttributes> productAttributeses = new HashSet<ProductAttributes>(0);
	private Set<Ratings> ratingses = new HashSet<Ratings>(0);
	private Set<OrderProducts> orderProductses = new HashSet<OrderProducts>(0);
*/
	public Products() {
	}

	public Products(Categories categories, String description, int quantity, String productName, int originalPrice,
			int discountPrice, boolean availability, Date updatedAt, Date createdAt) {
		this.categories = categories;
		this.description = description;
		this.quantity = quantity;
		this.productName = productName;
		this.originalPrice = originalPrice;
		this.discountPrice = discountPrice;
		this.availability = availability;
		this.updatedAt = updatedAt;
		this.createdAt = createdAt;
	}

	/*public Products(Categories categories, String description, int quantity, String productName, int originalPrice,
			int discountPrice, boolean availability, Date updatedAt, Date createdAt, Set<ProductImages> productImageses,
			Set<ProductAttributes> productAttributeses, Set<Ratings> ratingses, Set<OrderProducts> orderProductses) {
		this.categories = categories;
		this.description = description;
		this.quantity = quantity;
		this.productName = productName;
		this.originalPrice = originalPrice;
		this.discountPrice = discountPrice;
		this.availability = availability;
		this.updatedAt = updatedAt;
		this.createdAt = createdAt;
		this.productImageses = productImageses;
		this.productAttributeses = productAttributeses;
		this.ratingses = ratingses;
		this.orderProductses = orderProductses;
	}*/

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "category_id", nullable = false)
	public Categories getCategories() {
		return this.categories;
	}

	public void setCategories(Categories categories) {
		this.categories = categories;
	}

	@Column(name = "description", nullable = false, length = 65535)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "quantity", nullable = false)
	public int getQuantity() {
		return this.quantity;
	}

	public void setQuantity(int quantity) {
		this.quantity = quantity;
	}

	@Column(name = "product_name", nullable = false, length = 128)
	public String getProductName() {
		return this.productName;
	}

	public void setProductName(String productName) {
		this.productName = productName;
	}

	@Column(name = "original_price", nullable = false)
	public int getOriginalPrice() {
		return this.originalPrice;
	}

	public void setOriginalPrice(int originalPrice) {
		this.originalPrice = originalPrice;
	}

	@Column(name = "discount_price", nullable = false)
	public int getDiscountPrice() {
		return this.discountPrice;
	}

	public void setDiscountPrice(int discountPrice) {
		this.discountPrice = discountPrice;
	}

	@Column(name = "availability", nullable = false)
	public boolean isAvailability() {
		return this.availability;
	}

	public void setAvailability(boolean availability) {
		this.availability = availability;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", nullable = false, length = 19)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", nullable = false, length = 19)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

/*	@OneToMany(fetch = FetchType.LAZY, mappedBy = "products")
	public Set<ProductImages> getProductImageses() {
		return this.productImageses;
	}

	public void setProductImageses(Set<ProductImages> productImageses) {
		this.productImageses = productImageses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "products")
	public Set<ProductAttributes> getProductAttributeses() {
		return this.productAttributeses;
	}

	public void setProductAttributeses(Set<ProductAttributes> productAttributeses) {
		this.productAttributeses = productAttributeses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "products")
	public Set<Ratings> getRatingses() {
		return this.ratingses;
	}

	public void setRatingses(Set<Ratings> ratingses) {
		this.ratingses = ratingses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "products")
	public Set<OrderProducts> getOrderProductses() {
		return this.orderProductses;
	}

	public void setOrderProductses(Set<OrderProducts> orderProductses) {
		this.orderProductses = orderProductses;
	}
*/
}
